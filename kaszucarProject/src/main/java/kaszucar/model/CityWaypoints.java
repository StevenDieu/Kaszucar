package kaszucar.model;
// Generated 26 fï¿½vr. 2016 12:28:55 by Hibernate Tools 4.3.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * CityWaypoints generated by hbm2java
 */
@Entity
@Table(name = "city_waypoints", schema = "public")
public class CityWaypoints implements java.io.Serializable {

	private int idCityStop;
	private Covoiturage covoiturage;
	private String cityWaypoints;
	private Integer orderWaypoints;

	public CityWaypoints() {
	}

	public CityWaypoints(int idCityStop, Covoiturage covoiturage) {
		this.idCityStop = idCityStop;
		this.covoiturage = covoiturage;
	}

	public CityWaypoints(int idCityStop, Covoiturage covoiturage, String cityWaypoints, Integer orderWaypoints) {
		this.idCityStop = idCityStop;
		this.covoiturage = covoiturage;
		this.cityWaypoints = cityWaypoints;
		this.orderWaypoints = orderWaypoints;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id_city_stop", unique = true, nullable = false)
	public int getIdCityStop() {
		return this.idCityStop;
	}

	public void setIdCityStop(int idCityStop) {
		this.idCityStop = idCityStop;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_covoiturage", nullable = false)
	public Covoiturage getCovoiturage() {
		return this.covoiturage;
	}

	public void setCovoiturage(Covoiturage covoiturage) {
		this.covoiturage = covoiturage;
	}

	@Column(name = "city_waypoints")
	public String getCityWaypoints() {
		return this.cityWaypoints;
	}

	public void setCityWaypoints(String cityWaypoints) {
		this.cityWaypoints = cityWaypoints;
	}

	@Column(name = "order_waypoints")
	public Integer getOrderWaypoints() {
		return this.orderWaypoints;
	}

	public void setOrderWaypoints(Integer orderWaypoints) {
		this.orderWaypoints = orderWaypoints;
	}

}
